(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{573:function(e,t,r){"use strict";r.r(t);var a=r(5),l=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"file-api-系统整理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#file-api-系统整理"}},[e._v("#")]),e._v(" File API 系统整理")]),e._v(" "),r("h2",{attrs:{id:"file-api-关联的一些构造器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#file-api-关联的一些构造器"}},[e._v("#")]),e._v(" File API 关联的一些构造器")]),e._v(" "),r("h3",{attrs:{id:"blob-对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#blob-对象"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"}},[e._v("Blob 对象"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("优势：允许我们可以通过 JS 直接操作二进制数据")])]),e._v(" "),r("ul",[r("li",[e._v("表示一个不可变、原始数据的类文件对象。")]),e._v(" "),r("li",[e._v("表示的不一定是 JavaScript 原生格式的数据。")]),e._v(" "),r("li",[r("code",[e._v("文件 接口 基于 Blob")]),e._v("，继承了 blob 的功能并将其扩展使其支持用户系统上的文件")])]),e._v(" "),r("h4",{attrs:{id:"构造函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[e._v("#")]),e._v(" 构造函数")]),e._v(" "),r("p",[e._v("Blob(blobParts[, options])")]),e._v(" "),r("p",[e._v("返回一个新创建的 Blob 对象，其内容由参数中给定的数组串联组成")]),e._v(" "),r("h4",{attrs:{id:"属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),r("ul",[r("li",[e._v("Blob.size 只读")])]),e._v(" "),r("p",[e._v("Blob 对象中所包含数据的大小（字节）。")]),e._v(" "),r("ul",[r("li",[e._v("Blob.type 只读")])]),e._v(" "),r("p",[e._v("一个字符串，表明该 Blob 对象所包含数据的 MIME 类型。如果类型未知，则该值为空字符串。")]),e._v(" "),r("h4",{attrs:{id:"方法-edit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法-edit"}},[e._v("#")]),e._v(" 方法 Edit")]),e._v(" "),r("ul",[r("li",[e._v("Blob.slice([start,[ end ,[contentType]]])")])]),e._v(" "),r("p",[e._v("返回一个新的 Blob 对象，包含了源 Blob 对象中指定范围内的数据。")]),e._v(" "),r("h4",{attrs:{id:"events"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" Events")]),e._v(" "),r("ul",[r("li",[e._v("loadstart")]),e._v(" "),r("li",[e._v("abort")]),e._v(" "),r("li",[e._v("error")]),e._v(" "),r("li",[e._v("load")]),e._v(" "),r("li",[e._v("loadend")])]),e._v(" "),r("h3",{attrs:{id:"file-对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#file-对象"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/File",target:"_blank",rel:"noopener noreferrer"}},[e._v("File 对象"),r("OutboundLink")],1)]),e._v(" "),r("blockquote",[r("p",[e._v("文件(File) 接口提供有关文件的信息，并允许网页中的 JavaScript 访问其内容。")])]),e._v(" "),r("ul",[r("li",[e._v("File 对象是特殊类型的 Blob，且可以用在任意的 Blob 类型的 context 中")])]),e._v(" "),r("h4",{attrs:{id:"构造函数-file-file-属性-file-接口也继承了-blob-接口的属性："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#构造函数-file-file-属性-file-接口也继承了-blob-接口的属性："}},[e._v("#")]),e._v(" 构造函数 File(file) ####属性 File 接口也继承了 Blob 接口的属性：")]),e._v(" "),r("ul",[r("li",[e._v("File.lastModified： "),r("code",[e._v("（只读）")]),e._v("。 返回当前 File 对象所引用文件最后修改时间， 自 1970 年 1 月 1 日 0:00 以来的毫秒数。")]),e._v(" "),r("li",[e._v("File.lastModifiedDate： "),r("code",[e._v("（只读）")]),e._v("。 返回当前 File 对象所引用文件最后修改时间的 Date 对象。")]),e._v(" "),r("li",[e._v("File.name： "),r("code",[e._v("（只读）")]),e._v("。 返回当前 File 对象所引用文件的名字。")]),e._v(" "),r("li",[e._v("File.size： "),r("code",[e._v("（只读）")]),e._v("。 返回文件的大小。")]),e._v(" "),r("li",[e._v("File.webkitRelativePath： "),r("code",[e._v("（只读）")]),e._v("。 返回 File 相关的 path 或 URL。")]),e._v(" "),r("li",[e._v("File.type： "),r("code",[e._v("（只读）")]),e._v("。返回文件的 多用途互联网邮件扩展类型")])]),e._v(" "),r("h3",{attrs:{id:"filelist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filelist"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileList",target:"_blank",rel:"noopener noreferrer"}},[e._v("FileList"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("来源途径：")]),e._v(" "),r("ul",[r("li",[e._v("HTML input 元素获取的 files 属性")]),e._v(" "),r("li",[e._v("拖放操作的 DataTransfer 对象")])]),e._v(" "),r("h4",{attrs:{id:"方法-file-item-index-file-item-index"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法-file-item-index-file-item-index"}},[e._v("#")]),e._v(" 方法 File item(index); File item( index );")]),e._v(" "),r("h3",{attrs:{id:"filereader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filereader"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader",target:"_blank",rel:"noopener noreferrer"}},[e._v("FileReader"),r("OutboundLink")],1)]),e._v(" "),r("h4",{attrs:{id:"属性-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),r("ul",[r("li",[e._v("FileReader.error： "),r("code",[e._v("（只读）")]),e._v("。一个 DOMException，表示在读取文件时发生的错误 。")]),e._v(" "),r("li",[e._v("FileReader.readyState： "),r("code",[e._v("（只读）")]),e._v("。表示 FileReader 状态的数字。取值如下：")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("常量名")]),e._v(" "),r("th",[e._v("值")]),e._v(" "),r("th",[e._v("描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("EMPTY")]),e._v(" "),r("td",[e._v("0")]),e._v(" "),r("td",[e._v("还没有加载任何数据")])]),e._v(" "),r("tr",[r("td",[e._v("LOADING")]),e._v(" "),r("td",[e._v("1")]),e._v(" "),r("td",[e._v("数据正在被加载.")])]),e._v(" "),r("tr",[r("td",[e._v("DONE")]),e._v(" "),r("td",[e._v("2")]),e._v(" "),r("td",[e._v("已完成全部的读取请求")])])])]),e._v(" "),r("ul",[r("li",[e._v("FileReader.result： "),r("code",[e._v("（只读）")]),e._v("。文件的内容。该属性仅在读取操作完成后才有效，数据的格式取决于使用哪个方法来启动读取操作。")])]),e._v(" "),r("h4",{attrs:{id:"方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),r("blockquote",[r("p",[e._v("一下四个方法的共同之处：开始读取指定的 Blob 中的内容, 一旦完成，result 包含对应的信息")])]),e._v(" "),r("ul",[r("li",[e._v("ArrayBuffer readAsArrayBuffer(Blob blob)：读取文件并将一个包含文件内容的"),r("code",[e._v("ArrayBuffer对象")]),e._v("保存在 result 属性中。")]),e._v(" "),r("li",[e._v("DOMString readAsBinaryString(Blob blob)：读取文件并将"),r("code",[e._v("一个字符串")]),e._v("保存在 result 属性中，字符串中的每个字符表示一个字节。")]),e._v(" "),r("li",[e._v("DOMString readAsText(Blob blob, optional DOMString encoding)：以纯文本的方式读取文件，result 属性中将包含 "),r("code",[e._v("一个字符串")]),e._v("以表示所读取的文件内容。")]),e._v(" "),r("li",[e._v("DOMString readAsDataURL(Blob blob)：result 属性中将包含一个 data: "),r("code",[e._v("URL格式的字符串")]),e._v("以表示所读取文件的内容。")])]),e._v(" "),r("h3",{attrs:{id:"filereaderaync"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filereaderaync"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReaderSync",target:"_blank",rel:"noopener noreferrer"}},[e._v("FileReaderAync"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("FileReaderSync 接口允许以"),r("code",[e._v("同步")]),e._v("的方式读取 File 或 Blob 对象中的内容.")]),e._v(" "),r("blockquote",[r("p",[e._v("该接口"),r("code",[e._v("只在workers")]),e._v("里可用,因为在主线程里进行"),r("code",[e._v("同步I/O操作")]),e._v("可能会阻塞用户界面.")])]),e._v(" "),r("p",[e._v("使用方法同 readerReader")])])}),[],!1,null,null,null);t.default=l.exports}}]);